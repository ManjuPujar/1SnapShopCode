
import EnumValue = require('dw/value/EnumValue')
import MarkupText = require('dw/content/MarkupText');
import MediaFile = require('dw/content/MediaFile');

// autogeneratedfile - 'c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml'
declare global {
    module ICustomAttributes {

		interface SitePreferences {
			/**
			* Automatic payment method adding enabled

				Indicates if the 'Automatic payment method adding' feature is enabled via Connect with Paypal
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#5) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#214)
			*/
			PP_Automatic_PM_adding_enabled: boolean | null;

			/**
			* Connect with pay button url

				This URL is used for Connect with PayPal feature.
Sandbox URL: https://www.sandbox.paypal.com/connect?
Production URL: https://www.paypal.com/connect?
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#13) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#213)
			*/
			PP_Connect_With_Paypal_Button_Url: string | null;

			/**
			* Authorization and Capture webhook id

				Webhook id of payment authorization voided, payment capture refunded and payment capture completed events.
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#24) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#210)
			*/
			PP_WH_Authorization_And_Capture_Id: string | null;

			/**
			* Capture funds immediately

				This determines whether the funds are captured immediately or later (Authorization)
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#32) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#202)
			*/
			PP_API_PaymentAction: boolean | null;

			/**
			* PayPal Button Location
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#40) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#203)
			*/
			PP_API_Button_Location: EnumValue<'Cart' | 'CartMinicart' | 'CartMinicartPdp' | 'Billing' | null> 

			/**
			* Billing Agreement Enabled

				Determines if billing agreement will be created during checkout to registered users
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#64) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#204)
			*/
			PP_API_BA_Enabled: boolean | null;

			/**
			* Brand Name

				Will be displayed on the PayPal page. Maximum length: 127 characters
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#72) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#205)
			*/
			PP_API_BrandName: string | null;

			/**
			* Billing Agreement Description

				Will be displayed on the PayPal page if billing agreement feature is enabled. Maximum length: 128 characters
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#81) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#206)
			*/
			PP_API_BA_Description: string | null;

			/**
			* Merchant ID

				The merchant for whom you are facilitating a transaction.
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#91) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#207)
			*/
			PP_API_Merchant_Id: string | null;

			/**
			* Avaliable Alternative Payment Methods

				List of IDs of the enabled alternative payment methods.
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#99) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#209)
			*/
			PP_API_APM_methods: ReadonlyArray<string> 

			/**
			* Venmo Payment Method Enabled

				Determines if Venmo is enabled as payment method
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#106) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#208)
			*/
			PP_API_Venmo_Enabled: boolean | null;

			/**
			* Connect with PayPal agent login

				Connect with PayPal functionality requires agent credentials to perform "Login On Behalf" action.
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#114) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#215)
			*/
			PP_CWPP_Agent_Login: string | null;

			/**
			* Connect with PayPal agent password

				Connect with PayPal functionality requires agent credentials to perform "Login On Behalf" action.
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#122) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#216)
			*/
			PP_CWPP_Agent_Password: string | null;

			/**
			* List of enable funding methods

				List of additional enable funding methods for SDK URL creation (example: "paylater")
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#129) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#211)
			*/
			PP_Enable_Funding_List: ReadonlyArray<string> 

			/**
			* List of disable funding methods

				List of additional disable funding methods for SDK URL creation (example: "paylater" or/and "card")
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#137) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#212)
			*/
			PP_Disable_Funding_List: ReadonlyArray<string> 

			/**
			* 

				The "authend": "sandbox" parameter is only for sandbox instances.
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#145) 
			*/
			PP_Connect_With_PayPal_Button_Configs: string | null;

			/**
			* Pay Pal API Smart Button Styles

				Return style configurations for Pay Pal smart button (cart, billing pages)
                    * Available values:
                    *  height: (number) from 25 to 55,
                    *  color: (string) gold, blue, silver, black, white,
                    *  shape: (string) pill, rect,
                    *  layout: (string) horizontal, vertical,
                    *  tagline: (boolean) true, false
                    
                    Default value:
                    {
                        "cart":{"height":35,"color":"gold","shape":"rect","layout":"vertical","label":"checkout","tagline":false},
                        "checkout":{"height":35,"color":"gold","shape":"rect","layout":"vertical","label":"checkout","tagline":false},
                        "minicart": { "height": 35, "color": "gold", "shape": "rect", "layout": "vertical", "label": "checkout", "tagline": false },
                        "pdp": { "height": 35, "color": "gold", "shape": "rect", "layout": "vertical", "label": "checkout", "tagline": false }
                    }
                
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#152) 
			*/
			PP_API_Smart_Button_Styles: string | null;

			/**
			* Pay Pal API Credit Banner Styles

				Return style configurations for Pay Pal Credit Banner (cart, product, category )
                    Available values:     
                    layout: 'flex', // flex, text
                    styleColor: 'gray', // only for flex layout: blue, black, white, white-no-border, gray
                    ratio: '8x1', // only for flex layout: 1x1, 1x4, 8x1, 20x1
                    
                    {"cartCreditConfig":{"layout":"flex","styleColor":"gray","ratio":"8x1","logoType":"primary","logoPosition":"left","textColor":"black"},"productCreditConfig":{"layout":"text","styleColor":"blue","ratio":"8x1","logoType":"primary","logoPosition":"left","textColor":"black"},"categoryCreditConfig":{"layout":"flex","styleColor":"blue","ratio":"20x1","logoType":"primary","logoPosition":"left","textColor":"black"}}
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#183) 
			*/
			PP_API_Credit_Banner_Styles: string | null;

		}
		interface OrderPaymentInstrument {
			/**
			* paypalOrderID

				Paypal order id from create order API call
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#223) 
			*/
			paypalOrderID: string | null;

			/**
			* currentPaypalEmail

				Paypal account email used for payment
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#231) 
			*/
			currentPaypalEmail: string | null;

			/**
			* paymentId

				Used payment method id
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#239) 
			*/
			paymentId: string | null;

			/**
			* PayPal (REST) Active Billing Agreement ID

				Represent currently billing agreement that will be used for payment
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#247) 
			*/
			PP_API_ActiveBillingAgreement: string | null;

			/**
			* PayPal (REST) Payment Status

				paypal Payment Status
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#255) 
			*/
			paypalPaymentStatus: string | null;

			/**
			* PayPal (REST) Paypal Token

				Needed for proper NVP Paypal Transactions
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#263) 
			*/
			paypalToken: string | null;

		}
		interface CustomerPaymentInstrument {
			/**
			* PayPal Billing Agreement Token
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#276) 
			*/
			paypalBillingAgreementToken: string | null;

			/**
			* PayPal Billing Agreement Email
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#284) 
			*/
			paypalBillingAgreementEmail: string | null;

			/**
			* PayPal Billing Agreement ID
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#292) 
			*/
			paypalBillingAgreementID: string | null;

		}
		interface Profile {
			/**
			* PayPal (REST) Active Billing Agreement/s ID

				Array of saved billing agreements. Each billing agreement is an object with baID, email, defaul keys
			* @group Custom - Custom Attributes
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#305) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#337)
			*/
			PP_API_billingAgreement: string | null;

			/**
			* Flash Messages
			* @group Custom - Custom Attributes
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#313) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#338)
			*/
			flashMessages: string | null;

			/**
			* APMA feature is disabled

				Identifies whether the Automatic Payment Method Adding feature is disabled.
			* @group Custom - Custom Attributes
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#319) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#339)
			*/
			isDisabledFeatureAPMA: boolean | null;

			/**
			* Merged accounts

				Merged user accounts PayPal and Single Auth
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#326) 
			*/
			isMergedAccount: boolean | null;

		}
		interface Order {
			/**
			* PayPal Payment Method

				paypalPaymentMethod = 'express';
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#346) 
			*/
			paypalPaymentMethod: string | null;

			/**
			* paypal order transaction Id

				Paypal order transaction Id used in PayPal Transaction (Business Manager Modules)
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#354) 
			*/
			PP_API_TransactionID: string | null;

		}
		interface PaymentTransaction {
			/**
			* Transactions History

				All transactions is related with the order
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#367) 
			*/
			transactionsHistory: ReadonlyArray<string> 

		}
	}
}

declare global {
	interface IGetCustomPreferenceValue {
					/**
			* Automatic payment method adding enabled

				Indicates if the 'Automatic payment method adding' feature is enabled via Connect with Paypal
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#5) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#214)
			*/
			(name: 'PP_Automatic_PM_adding_enabled'): boolean | null;
			
			/**
			* Connect with pay button url

				This URL is used for Connect with PayPal feature.
Sandbox URL: https://www.sandbox.paypal.com/connect?
Production URL: https://www.paypal.com/connect?
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#13) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#213)
			*/
			(name: 'PP_Connect_With_Paypal_Button_Url'): string | null;
			
			/**
			* Authorization and Capture webhook id

				Webhook id of payment authorization voided, payment capture refunded and payment capture completed events.
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#24) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#210)
			*/
			(name: 'PP_WH_Authorization_And_Capture_Id'): string | null;
			
			/**
			* Capture funds immediately

				This determines whether the funds are captured immediately or later (Authorization)
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#32) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#202)
			*/
			(name: 'PP_API_PaymentAction'): boolean | null;
			
			/**
			* PayPal Button Location
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#40) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#203)
			*/
			(name: 'PP_API_Button_Location'): EnumValue<'Cart' | 'CartMinicart' | 'CartMinicartPdp' | 'Billing' | null> 
			
			/**
			* Billing Agreement Enabled

				Determines if billing agreement will be created during checkout to registered users
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#64) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#204)
			*/
			(name: 'PP_API_BA_Enabled'): boolean | null;
			
			/**
			* Brand Name

				Will be displayed on the PayPal page. Maximum length: 127 characters
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#72) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#205)
			*/
			(name: 'PP_API_BrandName'): string | null;
			
			/**
			* Billing Agreement Description

				Will be displayed on the PayPal page if billing agreement feature is enabled. Maximum length: 128 characters
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#81) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#206)
			*/
			(name: 'PP_API_BA_Description'): string | null;
			
			/**
			* Merchant ID

				The merchant for whom you are facilitating a transaction.
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#91) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#207)
			*/
			(name: 'PP_API_Merchant_Id'): string | null;
			
			/**
			* Avaliable Alternative Payment Methods

				List of IDs of the enabled alternative payment methods.
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#99) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#209)
			*/
			(name: 'PP_API_APM_methods'): ReadonlyArray<string> 
			
			/**
			* Venmo Payment Method Enabled

				Determines if Venmo is enabled as payment method
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#106) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#208)
			*/
			(name: 'PP_API_Venmo_Enabled'): boolean | null;
			
			/**
			* Connect with PayPal agent login

				Connect with PayPal functionality requires agent credentials to perform "Login On Behalf" action.
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#114) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#215)
			*/
			(name: 'PP_CWPP_Agent_Login'): string | null;
			
			/**
			* Connect with PayPal agent password

				Connect with PayPal functionality requires agent credentials to perform "Login On Behalf" action.
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#122) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#216)
			*/
			(name: 'PP_CWPP_Agent_Password'): string | null;
			
			/**
			* List of enable funding methods

				List of additional enable funding methods for SDK URL creation (example: "paylater")
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#129) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#211)
			*/
			(name: 'PP_Enable_Funding_List'): ReadonlyArray<string> 
			
			/**
			* List of disable funding methods

				List of additional disable funding methods for SDK URL creation (example: "paylater" or/and "card")
			* @group Paypal_Checkout - Paypal Configuration
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#137) | [group](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#212)
			*/
			(name: 'PP_Disable_Funding_List'): ReadonlyArray<string> 
			
			/**
			* 

				The "authend": "sandbox" parameter is only for sandbox instances.
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#145) 
			*/
			(name: 'PP_Connect_With_PayPal_Button_Configs'): string | null;
			
			/**
			* Pay Pal API Smart Button Styles

				Return style configurations for Pay Pal smart button (cart, billing pages)
                    * Available values:
                    *  height: (number) from 25 to 55,
                    *  color: (string) gold, blue, silver, black, white,
                    *  shape: (string) pill, rect,
                    *  layout: (string) horizontal, vertical,
                    *  tagline: (boolean) true, false
                    
                    Default value:
                    {
                        "cart":{"height":35,"color":"gold","shape":"rect","layout":"vertical","label":"checkout","tagline":false},
                        "checkout":{"height":35,"color":"gold","shape":"rect","layout":"vertical","label":"checkout","tagline":false},
                        "minicart": { "height": 35, "color": "gold", "shape": "rect", "layout": "vertical", "label": "checkout", "tagline": false },
                        "pdp": { "height": 35, "color": "gold", "shape": "rect", "layout": "vertical", "label": "checkout", "tagline": false }
                    }
                
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#152) 
			*/
			(name: 'PP_API_Smart_Button_Styles'): string | null;
			
			/**
			* Pay Pal API Credit Banner Styles

				Return style configurations for Pay Pal Credit Banner (cart, product, category )
                    Available values:     
                    layout: 'flex', // flex, text
                    styleColor: 'gray', // only for flex layout: blue, black, white, white-no-border, gray
                    ratio: '8x1', // only for flex layout: 1x1, 1x4, 8x1, 20x1
                    
                    {"cartCreditConfig":{"layout":"flex","styleColor":"gray","ratio":"8x1","logoType":"primary","logoPosition":"left","textColor":"black"},"productCreditConfig":{"layout":"text","styleColor":"blue","ratio":"8x1","logoType":"primary","logoPosition":"left","textColor":"black"},"categoryCreditConfig":{"layout":"flex","styleColor":"blue","ratio":"20x1","logoType":"primary","logoPosition":"left","textColor":"black"}}
			* 
			* @source [attribute](file:c:\Workspace\Projects\1SnapShopCode\code\link_paypal\metadata\meta\system-objecttype-extensions.xml#183) 
			*/
			(name: 'PP_API_Credit_Banner_Styles'): string | null;
			
	}
}